{% extends 'base.html.twig' %}

{% block title %}
    DEUS Library: Documentation
{% endblock %}

{% block content %}

    <div class="deuvo_doc">


        <p>DEUVO stands for Dark Energy Universe Virtual Observatory and allows to download DEUSS data through a
            VO-oriented database (following IVOA standards). DEUSS is the Dark Energy Universe Simulation Series which
            is part of DEUS (Dark Energy Universe Simulation) Consortium.</p>

        <p>This readme will detail the different steps to extract your datas.</p>

        <a name="summary"><h2>Summary</h2></a>

        <ol>
            <li>
                <a href="#A1">Select your simulation</a>
                <ul>
                    <li><a href="#A11">What are the simulations</a></li>
                    <li><a href="#A12">How to select one</a></li>
                </ul>
            </li>
            <li>
                <a href="#A2">Select type of object</a>
                <ul>
                    <li><a href="#A21">Fields</a></li>
                    <li><a href="#A22">Halos</a></li>
                </ul>
            </li>
            <li>
                <a href="#A3">Select properties and range of interest</a>
                <ul>
                    <li><a href="#A31">Available properties</a></li>
                    <li><a href="#A32">How to filter</a></li>
                </ul>
            </li>
            <li>
                <a href="#A4">Download properties</a>
                <ul>
                    <li><a href="#A41">How to download</a></li>
                    <li><a href="#A42">Text format</a></li>
                    <li><a href="#A43">VOTable format</a></li>
                </ul>
            </li>
            <li>
                <a href="#A5">Extract particles</a>
                <ul>
                    <li><a href="#A51">How to extract</a></li>
                    <li><a href="#A52">Format of the files</a></li>
                    <li><a href="#A53">How to read the file using Fortran</a></li>
                    <li><a href="#A54">How to read the file using C++</a></li>
                    <li><a href="#A55">How to read the file using other languages</a></li>
                    <li><a href="#A56">How to visualize the files</a></li>
                </ul>
            </li>
        </ol>

        <a name="A1"><h2>1. Select your simulation</h2></a>

        <a name="A11"><h3>What are the simulations</h3></a>

        <p>Today, only DEUSS simulations are available through DEUVO. Data from other DEUS Consortium projects as <a
                    href="http://www.deus-consortium.org/a-propos/dark-energy-universe-simulation-full-universe-run/">DEUS
                FUR</a> and DEUS PUR, will be available later on.</p>

        <p>DEUSS consists in 5 N-body simulations with 2048^3 particles, 9 simulations with 1024^3 particles (plus some
            512^3 and 256^3 particles simulations for tests or convergence studies). We have explored three cosmologies:
            LCDM WMAP5 (lcdmw5), quintessence with Ratra-Peebles potential (rpcdmw5) and quintessence with Supergravity
            corrections (sucdmw5). Box lengthes are 2592 Mpc/h, 648 Mpc/h and 162 Mpc/h. All the simulations share the
            same realization of the initial density field and have been run with the same code: RAMSES, modified for
            quintessence.</p>

        <p>The goal of this simulation suite is to investigate the imprints of dark energy on cosmic structure formation
            at various scales from Gpc to kpc and for various realistic cosmologies calibrated on CMB and SNIa.</p>

        <p><a href="http://www.deus-consortium.org/a-propos/cosmological-models/">More informations about the
                simulations are available on the site.</a></p>

        <a name="A12"><h3>How to select one</h3></a>

        <p>The simulations are sorted in a table by box length and cosmology. In each cell, you'll find the available
            resolution for the combination.
            Just click on the one you want to select it.</p>
        <p class="img"><img src="{{ asset("images/doc/select.jpg") }}" alt="table"/><br/>Screenshot for simulation selection
        </p>

        <p>When selected, the parameter settings appears below as well as the available snapshots. The default snapshot
            is the smallest Z, usually Z=0. You can also select another one according to your needs.</p>
        <p class="img"><img src="{{ asset("images/doc/snapshot.jpg") }}" alt="snapshot"/><br/>Screenshot for snapshot
            selection</p>

        <p class="summary"><a href="#summary">Back to summary &#x25B2;</a></p>

        <a name="A2"><h2>2. Select type of object</h2></a>

        <p class="img"><img src="{{ asset("images/doc/type.jpg") }}" alt="snapshot"/><br/>Screenshot for type of object
            selection</p>

        <a name="A21"><h3>Fields</h3></a>

        <p><strong>What is it?</strong> Particles sorted per region</p>
        <p><strong>What are the particles properties?</strong> Position (distribution), velocity (kinematics), identity
            (follow particles from one snapshot to another)</p>
        <p><strong>What are the redshifts available?</strong> More than 10 per simulations:
            a=astart,0.025,0.05,0.1,0.15...,0.95,1</p>
        <p><strong>What are the scales probed?</strong> From 3. kpc to 10. Gpc</p>
        <p><strong>What could I do with it?</strong> Any field oriented analysis: correlation, distribution, filament,
            weak lensing, BAO...</p>

        <a name="A22"><h3>Halos</h3></a>

        <p><strong>What is it?</strong> Particles sorted on a per halo basis</p>
        <p><strong>What are the particles properties?</strong> Position, velocity, identity ...</p>
        <p><strong>What are the redshifts available?</strong> More than 10 per simulations:
            a=astart,0.025,0.05,0.1,0.15...,0.95,1</p>
        <p><strong>What are the halos probed?</strong> From 2.5 .10^10 to 1. 10^16 Msun, from 100 to 3 millions
            particles.</p>
        <p><strong>What could I do with it?</strong> Any halo oriented analysis: cluster counts, strong lensing,
            statistics on macroscopic properties and internal profiles...</p>

        <p class="summary"><a href="#summary">Back to summary &#x25B2;</a></p>


        <a name="A3"><h2>3. Select properties and range of interest</h2></a>

        <a name="A31"><h3>Available properties</h3></a>

        <h4>Fields</h4>

        <ul>
            <li><strong>idp:</strong> id of fields in the simulation box</li>
            <li><strong>npart:</strong> number of particles in detected fields in the simulation box</li>
            <li><strong>x (Mpc/h (comoving)): </strong>x-position of fields in the simulation box</li>
            <li><strong>y (Mpc/h (comoving)): </strong>y-position of fields in the simulation box</li>
            <li><strong>z (Mpc/h (comoving)): </strong>z-position of fields in the simulation box</li>
            <li><strong>x_min (Mpc/h (comoving)): </strong>Min x-position of fields in the simulation box</li>
            <li><strong>x_max (Mpc/h (comoving)): </strong>Max x-position of fields in the simulation box</li>
            <li><strong>y_min (Mpc/h (comoving)): </strong>Min y-position of fields in the simulation box</li>
            <li><strong>y_max (Mpc/h (comoving)): </strong>Max y-position of fields in the simulation box</li>
            <li><strong>z_min (Mpc/h (comoving)): </strong> Min z-position of fields in the simulation box</li>
            <li><strong>z_max (Mpc/h (comoving)): </strong>Max z-position of fields in the simulation box</li>
            <li><strong>delta:</strong> Overdensity of the field: delta=rho/
                <rho>-1
            </li>
        </ul>

        <h4>Halos</h4>

        <ul>
            <li><strong>idp:</strong> id of detected halos in the simulation box</li>
            <li><strong>npart:</strong> number of particles in detected halos in the simulation box</li>
            <li><strong>x (Mpc/h (comoving)): </strong> x-position in detected halos in the simulation box</li>
            <li><strong>y (Mpc/h (comoving)): </strong> y-position in detected halos in the simulation box</li>
            <li><strong>z (Mpc/h (comoving)): </strong> z-position in detected halos in the simulation box</li>
            <li><strong>vx (km/s (physical)): </strong> vx-speed in detected halos in the simulation box</li>
            <li><strong>vy (km/s (physical)): </strong> vy-speed in detected halos in the simulation box</li>
            <li><strong>vz (km/s (physical)): </strong> vz-speed in detected halos in the simulation box</li>
            <li><strong>mass (Msun/h): </strong> mass of detected halos in the simulation box</li>
            <li><strong>rmax: </strong> distance of the farthest particles in detected halos divided by r178</li>
            <li><strong>vmax: </strong> speed of the fastest particle in detected halo divided by v178</li>
            <li><strong>r178 (Mpc/h (comoving)): </strong> radius corresponding to FOF mass if one assumes an
                overdensity delta=178 in detected halos in the simulation box
            </li>
            <li><strong>v178 (km/s (physical)): </strong> velocity corresponding to FOF mass if one assumes an
                overdensity delta=178 in detected halos in the simulation box
            </li>
            <li><strong>sigmapos: </strong> standard deviation of particles position in detected halos divided by r178
            </li>
            <li><strong>sigmavel: </strong> standard deviation of particles velocity in detected halos divided by v178
            </li>
            <li><strong>jtot: </strong> total angular momentum lambda_prime (normalized to sqrt(2)*M*R178*V178) in
                detected halos
            </li>
        </ul>

        <a name="A32"><h3>How to filter</h3></a>

        <p>To filter among the objects, you can enter a "lower than" and "greater than" filter for each of the available
            properties.
            To help you, the min/mean/max values are shown on the right.</p>

        <p>To select the properties you want to see, you should check the "view in result" box for each of them. x,y,z
            and npart are always in the results.</p>

        <p class="img"><img src="{{ asset("images/doc/properties.jpg") }}" alt="snapshot"/><br/>Screenshot for properties</p>

        <p>You should them press the "Search matching object" button, and you'll receive the list.</p>

        <p class="img"><img src="{{ asset("images/doc/simple_result.jpg") }}" alt="snapshot"/><br/>Screenshot for result</p>

        <p>Results are shown by page of 50 results.</p>

        <p class="summary"><a href="#summary">Back to summary &#x25B2;</a></p>

        <a name="A4"><h2>4. Download properties</h2></a>

        <a name="A41"><h3>How to download</h3></a>

        <p>To download the properties of the selected objects, just click on the button for the format you want.</p>

        <p>However, be careful that only the properties with the "View in result" checked will be downloaded.</p>

        <p class="img"><img src="{{ asset("images/doc/download.jpg") }}" alt="snapshot"/><br/>Screenshot for properties</p>

        <a name="A42"><h3>Text format</h3></a>

        <p>Text format is a basic ASCII text format with fix column size. Each column is 18 character wide.</p>

        <p>Example:</p>

        <pre>
        x                 y                 z                 npart             mass
        60.25786          283.9211          63.06452          5483.0            7.099936E14
        188.2782          80.72556          33.48819          5188.0            6.71794E14
        (...)
        503.5614          177.2386          33.16534          5704.0            7.386109E14
        </pre>


        <a name="A43"><h3>VOTable format</h3></a>

        <p>VOTable is an XML file format validating using the VOTable schema <a
                    href="http://www.ivoa.net/xml/VOTable/VOTable-1.2.xsd">http://www.ivoa.net/xml/VOTable/VOTable-1.2.xsd</a>
            created by the <a href="http://www.ivoa.net">International Virtual Observatory Alliance (IVOA)</a>.</p>
        <p>This format can be used with softwares such as Topcat : <a href="http://www.star.bris.ac.uk/~mbt/topcat/">http://www.star.bris.ac.uk/~mbt/topcat/</a>
        </p>

        <p>More informations can be found on the IVOA web site : <a href="http://www.ivoa.net">http://www.ivoa.net</a>
        </p>

        <p>Example:</p>

            <pre><xmp>
                    <?xml version="1.0"?>
                    <VOTABLE xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                             xsi:noNamespaceSchemaLocation=" xmlns:http://www.ivoa.net/xml/VOTable-1.2.xsd"
                             version="1.2">
                        <RESOURCE name="Result set (halos)" type="results">
                            <TABLE name="results">
                                <DESCRIPTION>List of properties of objects matchings user criterions</DESCRIPTION>
                                <FIELD name="x" datatype="double"/>
                                <FIELD name="y" datatype="double"/>
                                <FIELD name="z" datatype="double"/>
                                <FIELD name="npart" datatype="double"/>
                                <FIELD name="mass" datatype="double"/>
                                <DATA>
                                    <TABLEDATA>
                                        <TR>
                                            <TD>60.25786</TD>
                                            <TD>283.9211</TD>
                                            <TD>63.06452</TD>
                                            <TD>5483.0</TD>
                                            <TD>7.099936E14</TD>
                                        </TR>
                                        <TR>
                                            <TD>188.2782</TD>
                                            <TD>80.72556</TD>
                                            <TD>33.48819</TD>
                                            <TD>5188.0</TD>
                                            <TD>6.71794E14</TD>
                                        </TR>
                                        (...)
                                        <TR>
                                            <TD>503.5614</TD>
                                            <TD>177.2386</TD>
                                            <TD>33.16534</TD>
                                            <TD>5704.0</TD>
                                            <TD>7.386109E14</TD>
                                        </TR>
                                    </TABLEDATA>
                                </DATA>
                            </TABLE>
                        </RESOURCE>
                    </VOTABLE>
                </xmp></pre>

        <p class="summary"><a href="#summary">Back to summary &#x25B2;</a></p>

        <a name="A5"><h2>5. Extract particles</h2></a>

        <a name="A51"><h3>How to extract</h3></a>

        <p>To extract the particles of the objects, first select the objects you need by checking them.</p>

        <p class="img"><img src="{{ asset("images/doc/result.jpg") }}" alt="snapshot"/><br/>Screenshot for result</p>

        <p>Then click on the "Extract select objects" button.</p>

        <p class="img"><img src="{{ asset("images/doc/extract.jpg") }}" alt="snapshot"/><br/>Screenshot for extracting</p>

        <p>You then be asked for your e-mail address. This address won't be stored and is only used to send you the
            notification when the files have bin processed by our server.</p>

        <p class="img"><img src="{{ asset("images/doc/popup.jpg") }}" alt="snapshot"/><br/>Screenshot for popup</p>

        <p>A few minutes later, you will receive an email with a download link available 5 days to get your files.</p>

        <a name="A52"><h3>Format of the files</h3></a>

        <p>The Field and Halo files are binary big endian unformated Fortran files.</p>

        <p>They can be read natively in Fortran, or using a provided library in C++ as described below.
            Libraries for other languages will be provided later on, some tips are given below to create yours.</p>

        <h4>Field file description</h4>

        <table>
            <tr>
                <td>npart</td>
                <td>integer(4)</td>
                <td>Number of particles in the field</td>
            </tr>
            <tr>
                <td>procid</td>
                <td>integer(4)</td>
                <td>ID of the cube</td>
            </tr>
            <tr>
                <td>boundaries</td>
                <td>real(4)*6</td>
                <td>xmin,xmax,ymin,ymax,zmin,zmax</td>
            </tr>
            <tr>
                <td>positions</td>
                <td>real(4)*3*npart</td>
                <td>x,y,z position of each particles</td>
            </tr>
            <tr>
                <td>velocities</td>
                <td>real(4)*3*npart</td>
                <td>vx,vy,vz velocity of each particles</td>
            </tr>
            <tr>
                <td>ids</td>
                <td>int(8)*npart</td>
                <td>unique id of each particle</td>
            </tr>
        </table>

        <h4>Halo file description</h4>

        <table>
            <tr>
                <td>nhalos</td>
                <td>integer(4)</td>
                <td>Number of halos in the file</td>
            </tr>
        </table>

        <p>Then, for each halo:</p>

        <table>
            <tr>
                <td>npart</td>
                <td>integer(4)</td>
                <td>Number of particles in the field</td>
            </tr>
            <tr>
                <td>positions</td>
                <td>real(4)*3*npart</td>
                <td>x,y,z position of each particles</td>
            </tr>
            <tr>
                <td>velocities</td>
                <td>real(4)*3*npart</td>
                <td>vx,vy,vz velocity of each particles</td>
            </tr>
            <tr>
                <td>ids</td>
                <td>int(8)*npart</td>
                <td>unique id of each particle</td>
            </tr>
        </table>

        <a name="A53"><h3>How to read the file using Fortran</h3></a>

        <p>The different files are created using Fortran, so they can easily be read using this language.</p>

        <p>However, be careful that they have been generated from Big Endian supercomputers
            so you need to use the proper compiler setting to read them correctly. <br/>For instance, using ifort:</p>
        <pre>       ifort <strong>-convert big_endian</strong> -O3 my_program.f90 -o my_program</pre>

        <h4>Read Field file in Fortran</h4>

        <p>Program sample to read a field file:</p>

                <pre><xmp> program read_field
                        implicit none

                        integer::mynpart,procID,Ucub,j,i
                        real::xmin,xmax,ymin,ymax,zmin,zmax
                        integer(8),allocatable::id(:)
                        real,allocatable::x(:,:),v(:,:)

                        Open(Unit=Ucub,file='/path_for_data/fof_boxlen648_n1024_lcdmw5_cube_00001',Form='Unformatted')
                        ! read number of particles integer*4
                        Read(Ucub) mynpart
                        ! read ID of the FoF process assigned to this cube integer*4
                        Read(Ucub) procID
                        ! read boundary values of the cube real*4
                        Read(Ucub) xmin,xmax,ymin,ymax,zmin,zmax
                        ! allocate memory
                        allocate(id(1:mynpart))
                        allocate(x(1:3,1:mynpart))
                        allocate(v(1:3,1:mynpart))
                        ! read positions real*4
                        Read(Ucub) ((x(j,i),j=1,3),i=1,mynpart)
                        ! read velocities real*4
                        Read(Ucub) ((v(j,i),j=1,3),i=1,mynpart)
                        ! read id's integer*8 WARNING
                        Read(Ucub) (id(i),i=1,mynpart)
                        Close(Ucub)

                        end program read_field
                    </xmp></pre>

        <h4>Read Halo file in Fortran</h4>

        <p>Program sample to read the 1st halo of a halo file:</p>

            <pre><xmp> program read_struct
                    implicit none

                    integer::mynpart,procID,Ucub,j,i,mynhalos
                    real::xmin,xmax,ymin,ymax,zmin,zmax
                    integer(8),allocatable::id(:)
                    real,allocatable::x(:,:),v(:,:)

                    Open(Unit=Ucub,file='/home/jpasdeloup/sample/fof_boxlen648_n1024_lcdmw5_strct_00001',Form='Unformatted')
                    ! read number of halos integer*4
                    Read(Ucub) mynhalos

                    ! READ 1st HALO ONLY
                    ! read number of particles integer*4
                    Read(Ucub) mynpart
                    ! allocate memory
                    allocate(id(1:mynpart))
                    allocate(x(1:3,1:mynpart))
                    allocate(v(1:3,1:mynpart))
                    ! read positions real*4
                    Read(Ucub) ((x(j,i),j=1,3),i=1,mynpart)
                    ! read velocities real*4
                    Read(Ucub) ((v(j,i),j=1,3),i=1,mynpart)
                    ! read id's integer*8 WARNING
                    Read(Ucub) (id(i),i=1,mynpart)

                    Close(Ucub)

                    end program read_struct
                </xmp></pre>

        <a name="A54"><h3>How to read the file using C++</h3></a>

        <p>For C++, a special library has been created, FOFReaderLib that you can find on GitHub:<br/>
            <a href="https://github.com/pasdeloup/FOFReaderLib">https://github.com/pasdeloup/FOFReaderLib</a>
        </p>

        <h4>Read Field file in C++</h4>

        <p>Program sample to read the a field file and display some infos about it:</p>

            <pre><xmp> #include "FOFReaderLib/FOFReaderLib.h"

                    int main(void)
                    {
                    // Simple line to read a Field. The second arg is to ask reading the ids (default is false)
                    FOFCube cube("/path_for_data/fof_boxlen648_n1024_lcdmw5_cube_00001", true);

                    // Show some details about the read cube as an example of usage
                    std::cout
                    << cube.npart() << " particles, "
                    << "area: (" << cube.minX() << "," << cube.minY() << "," << cube.minZ() << ") "
                    << "to (" << cube.maxX() << "," << cube.maxY() << "," << cube.maxZ() << ")"
                    << std::endl;
                    for(int j=0; j< std::min(10,cube.npart()); j++) {
                    std::cout << " Particle " << j << ": "
                    << "id: " << cube.id(j) << " "
                    << "position: (" << cube.posX(j) << "," << cube.posY(j) << "," << cube.posZ(j) << ") "
                    << "velocity (" << cube.velX(j) << "," << cube.velY(j) << "," << cube.velZ(j) << ")"
                    << std::endl;
                    }
                    return 0;
                    }
                </xmp></pre>

        <h4>Read Halo file in C++</h4>

        <p>Program sample to read the a halo file and display some infos about each halo:</p>

            <pre><xmp> #include "FOFReaderLib/FOFReaderLib.h"

                    int main(void)
                    {
                    // Simple line to read a list of halos
                    FOFStrct strct("/path_for_data/fof_boxlen648_n1024_lcdmw5_strct_00001");

                    // List the halos from the file as an example of usage
                    for(int i=0; i
                    <strct.nHalos
                    (); i++) {
                    std::cout << "HALO " << i << ": "
                    << strct.halos(i)->npart() << " particles"
                    << std::endl;
                    }
                    return 0;
                    }
                </xmp></pre>

        <a name="A55"><h3>How to read the file using other languages</h3></a>

        <p>To read the files in other languages, you need to be able to read Fortran binary files, and to manage Big
            Endianess</p>

        <h4>Read Fortran binary files</h4>

        <p>In Fortran, each Write command add a record marker before and after the data. This record marker is a 4 byte
            integer giving the number of bytes wrotten.</p>

        <p>For instance, to read the (x,y,z) coordinates of 200 particles, you will find 200*3*4 + 2*4 = 2408 bytes:</p>

            <pre>
            4 bytes: head record marker, integer = 2400
            4 bytes: x coordinate of the 1st particle, float
            4 bytes: y coordinate of the 1st particle, float
            4 bytes: z coordinate of the 1st particle, float
            4 bytes: x coordinate of the 2nd particle, float
            4 bytes: y coordinate of the 2nd particle, float
            4 bytes: z coordinate of the 2nd particle, float
            (...)
            4 bytes: x coordinate of the 200th particle, float
            4 bytes: y coordinate of the 200th particle, float
            4 bytes: z coordinate of the 200th particle, float
            4 bytes: foot record marker, integer = 2400
            </pre>

        <h4>Read Big Endian Files</h4>

        <p>Bytes can be wrotten either in Big Endian (BE) or Little Endian (LE) on a computer, LE being the most common.
            <a href="http://en.wikipedia.org/wiki/Endianness">http://en.wikipedia.org/wiki/Endianness</a></p>

        <p>To read BE files on a LE computer, some languages like Fortran allow to easily switch using a compiler
            option, or have special functions.</p>

        <p>If you don't have, you'll need to manually swap the order of the bits composing each byte. That's what is
            done in the C++ FOFReaderLib library.</p>


        <a name="A56"><h3>How to visualize the files</h3></a>

        <p>To visualize field and halos in real time, a <a href="http://paraview.org/">Paraview</a> plugin will soon be
            available.</p>
        <p>Be careful that a powerful GPU is needed for fields or big halos.</p>

        <p>For raytracing images, a <a href="http://www.mpa-garching.mpg.de/~kdolag/Splotch/">Splotch</a> plugin will
            also soon be available.</p>

        <p class="summary"><a href="#summary">Back to summary &#x25B2;</a></p>

        <br/>
    </div>

{% endblock %}

{% block stylesheets %}

{% endblock %}
